// Code generated by type-wrapper; DO NOT EDIT.
package test

import (
	"encoding/json"
)

type ITester interface {
	Field1() string
	SetSecondField(val int32)
	Json() []byte
}

// TesterWrapper encapulates the type Tester
type TesterWrapper struct {
	Tester
	// The name of the original type, it gets initalized when calling Json() function, DO NOT USE IT
	DataType string `json:"_data_type,omitempty"`
}

func (tester TesterWrapper) Field1() string {
	return tester.Tester.field1
}

func (tester TesterWrapper) SetSecondField(val int32) {
	tester.Tester.field2 = val
}

func (tester TesterWrapper) Json() []byte {
	tester.DataType = "Tester"
	if data, err := json.Marshal(tester); err == nil {
		return data
	}
	return []byte{}
}

